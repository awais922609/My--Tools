# -*- coding: utf-8 -*-
"""Crypto Guessing Full

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11-elHiGLc0vkQdLEBamg48h9v6CxhggX
"""

import requests
import pandas as pd
import matplotlib.pyplot as plt

# Get the data for Bitcoin
url = "https://api.coingecko.com/api/v3/coins/ilcapo/market_chart"
params = {
    "vs_currency": "usd",
    "days": 365
}
response = requests.get(url, params=params)
data = response.json()

# Convert the data to a pandas DataFrame
df = pd.DataFrame(data["prices"], columns=["timestamp", "price"])

# Convert timestamp to datetime and price to numeric
df["timestamp"] = pd.to_datetime(df["timestamp"], unit="ms")
df["price"] = pd.to_numeric(df["price"])

# Calculate the RSI
window_length = 14
close_prices = df["price"]
delta = close_prices.diff()
gain = delta.where(delta > 0, 0)
loss = -delta.where(delta < 0, 0)
avg_gain = gain.rolling(window_length).mean()
avg_loss = loss.rolling(window_length).mean()
rs = avg_gain / avg_loss
rsi = 100 - (100 / (1 + rs))

# Plot the RSI
plt.plot(df["timestamp"], rsi, label="RSI")
plt.xlabel("Date")
plt.ylabel("RSI")
plt.title("Bitcoin RSI")
plt.legend()
plt.grid(True)
plt.show()

# Calculate the moving averages
ma_5 = close_prices.rolling(5).mean()
ma_10 = close_prices.rolling(10).mean()

# Calculate the Bollinger Bands
upper_band = ma_10 + 2 * (ma_10 - ma_5)
lower_band = ma_10 - 2 * (ma_10 - ma_5)

# Plot the Bollinger Bands
plt.plot(df["timestamp"], ma_10, label="MA 10")
plt.plot(df["timestamp"], upper_band, label="Upper Band")
plt.plot(df["timestamp"], lower_band, label="Lower Band")
plt.xlabel("Date")
plt.ylabel("Price")
plt.title("Bitcoin Bollinger Bands")
plt.legend()
plt.show()

# Use the technical indicators to predict the future trends
for rsi_value in rsi:
    if rsi_value < 30:
        print("The cryptocurrency is oversold and is likely to go up in price.")
    elif rsi_value > 70:
        print("The cryptocurrency is overbought and is likely to go down in price.")
    else:
        print("The cryptocurrency is neither overbought nor oversold and is likely to continue its current trend.")

# Predict the future trends
predicted_prices = ma_10 + (upper_band - ma_10) * (rsi - 30) / 40

# Plot the predicted future trends
plt.plot(df["timestamp"], ma_10, label="MA 10")
plt.plot(df["timestamp"], upper_band, label="Upper Band")
plt.plot(df["timestamp"], lower_band, label="Lower Band")
plt.plot(df["timestamp"], predicted_prices, label="Predicted Prices")
plt.xlabel("Date")
plt.ylabel("Price")
plt.title("Bitcoin Price with Predicted Trends")
plt.legend()
plt.show()